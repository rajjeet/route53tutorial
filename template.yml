Parameters:

  KeyPairName:
    Type: String
    Description: Key Pair specific to region

  ImageAmi:
    Type: String
    Description: Image AMI of the EC2 instances

Resources:

  r53LabVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: labName
          Value: r53
  
  r53LabSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.16.0.0/24
      Tags:
        - Key: labName
          Value: r53
      VpcId: !Ref r53LabVpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'

  r53LabSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 172.16.1.0/24
      Tags:
        - Key: labName
          Value: r53
      VpcId: !Ref r53LabVpc
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select 
        - 1
        - Fn::GetAZs: !Ref 'AWS::Region'
  
  r53LabInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: labName
          Value: r53
  
  r53LabVpcGatewayAttachment:    
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref r53LabInternetGateway
      VpcId: !Ref r53LabVpc      

  r53LabRoutetable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref r53LabVpc
      Tags:
        - Key: labName
          Value: r53

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref r53LabRoutetable
      SubnetId: !Ref r53LabSubnet1
  
  Subnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref r53LabRoutetable
      SubnetId: !Ref r53LabSubnet2
    
  r53LabAllRoutes:      
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0            
      GatewayId: !Ref r53LabInternetGateway
      RouteTableId: !Ref r53LabRoutetable

  r53LabWebSecurityGroup:  
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: r3-lab-webServerGroup
      GroupDescription: Security group for web server      
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0          
          FromPort: 80
          ToPort: 80        
          IpProtocol: tcp                    
        - CidrIp: 0.0.0.0/0          
          FromPort: 22
          ToPort: 22      
          IpProtocol: tcp
      Tags:
        - Key: labName
          Value: r53
      VpcId: !Ref r53LabVpc      

  r53Ec2WebServer1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageAmi
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref r53LabWebSecurityGroup
      SubnetId: !Ref r53LabSubnet1
      Tags:
          - Key: labName
            Value: r53
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt install docker.io -y
          docker run --rm -p 80:80 benpiper/r53-ec2-web

  r53Ec2WebServer2:
    Type: AWS::EC2::Instance
    Properties:      
      ImageId: !Ref ImageAmi
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref r53LabWebSecurityGroup
      SubnetId: !Ref r53LabSubnet2
      Tags:
          - Key: labName
            Value: r53
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update
          apt install docker.io -y
          docker run --rm -p 80:80 benpiper/r53-ec2-web

